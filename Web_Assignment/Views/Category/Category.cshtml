@model CategoryVM
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    ViewBag.Title = "Category";
    Layout = "../Shared/_ALayout";
    IPagedList<Category> categories = ViewBag.Categories;
    string[] fields = ["Id", "Name"];
}

<form method="post" class="form">
    <div asp-validation-summary="ModelOnly"></div>

    <label asp-for="Name"></label>
    <input asp-for="Name" autofocus>
    <span asp-validation-for="Name"></span>

    <section>
        <button>Insert</button>
        <button type="reset">Reset</button>
    </section>

    <div class="info">@Html.Raw(TempData["Info"])</div>
</form>

<br>
<form>
    @Html.TextBox("name", "",
            new { type = "search", autofocus = "", data_trim = "" })
    @Html.Hidden("sort")
    @Html.Hidden("dir")
    <button>Search</button>
</form>

<br>

<table class="table">
    <tr>
        @foreach (var f in fields)
        {
            string d = "asc";
            string c = "";

            if (f == ViewBag.Sort)
            {
                d = ViewBag.Dir == "des" ? "asc" : "des";
                c = ViewBag.Dir;
            }

            <th>
                <a href="?name=@ViewBag.Name&sort=@f&dir=@d" class="@c">@f</a>
            </th>
        }
    </tr>

    @foreach (var c in categories)
    {
        <tr>
            <td id="CatId">@c.Id</td>
            <td>@c.Name</td>
            <td>
                <button data-get="/Category/CategoryUpdate/@c.Id">Update</button>
                <button data-post="/Category/Delete/@c.Id">Delete</button>
            </td>
        </tr>
    }
</table>

@{
    var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
    options.LinkToFirstPageFormat = "First";
    options.LinkToLastPageFormat = "Last";
    options.LinkToPreviousPageFormat = "Previous";
    options.LinkToNextPageFormat = "Next";
}

@Html.PagedListPager(
        categories,
        page => $"?name={ViewBag.Name}&sort={ViewBag.Sort}&dir={ViewBag.Dir}&page={page}",
        options
    )
