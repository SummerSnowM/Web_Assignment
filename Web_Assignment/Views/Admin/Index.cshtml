@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Staff>
@{
    ViewBag.Title = "Staff List";
    Layout = "../Shared/_ALayout";
    // IEnumerable<Staff> staffs = ViewBag.Staffs;
    string[] fields = ["Id", "Name", "Email"];

}

<form>
    @Html.TextBox("name", "",
                  new { type = "search", autofocus = "", data_trim = "" })
    @Html.Hidden("sort")
    @Html.Hidden("dir")
    <button>Search</button>
</form>

<section>
    <button><a href="/Admin/StaffAdd">Register Staff</a></button>
</section>

<br>

<table class="table">
    <tr>
        @foreach (var f in fields)
        {
            string d = "asc";
            string c = "";

            if (f == ViewBag.Sort)
            {
                d = ViewBag.Dir == "des" ? "asc" : "des";
                c = ViewBag.Dir;
            }

            <th>
                <a href="?name=@ViewBag.Name&sort=@f&dir=@d" class="@c">@f</a>
            </th>
        }
    </tr>

    @foreach (var s in Model)
    {
        <tr>
            <td id="StaffId">@s.Id</td>
            <td>@s.Name</td>
            <td>@s.Email</td>
            <td>
                <button data-get="/Admin/StaffUpdate/@s.Id">Update</button>
                <button data-post="/Admin/StaffDelete/@s.Id?@s.Name">Delete</button>
            </td>
        </tr>
    }
</table>

@{
    var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
    options.LinkToFirstPageFormat = "First";
    options.LinkToLastPageFormat = "Last";
    options.LinkToPreviousPageFormat = "Previous";
    options.LinkToNextPageFormat = "Next";
}

@Html.PagedListPager(
        Model,
        page => $"?name={ViewBag.Name}&sort={ViewBag.Sort}&dir={ViewBag.Dir}&page={page}",
        options
    )

